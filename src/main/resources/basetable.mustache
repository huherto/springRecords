 package {{baseTablePackageName}};

import org.springframework.jdbc.core.RowMapper;

import javax.sql.DataSource;
{{#baseTableImports}}
{{toString}}
{{/baseTableImports}}

public class {{baseTableClassName}} extends AbstractBaseTable<{{concreteRecordClassName}}> {

    private RowMapper<{{concreteRecordClassName}}> rm = new RowMapper<{{concreteRecordClassName}}>() {
        @Override
        public {{concreteRecordClassName}} mapRow(ResultSet rs, int rowNum) throws SQLException {
             return new {{concreteRecordClassName}}(rs, rowNum);
        }
    };

    public {{baseTableClassName}}(DataSource dataSource) {
        super(dataSource);
    }

    @Override
    public RowMapper<{{concreteRecordClassName}}> rowMapper() {
        return rm;
    }

    @Override
    public String tableName() {
        return "{{fullTableName}}";
    }

    {{#hasPrimaryKey}}
    public Optional<{{concreteRecordClassName}}> findByPK({{pkMethodParameterList}}) {
        String sql =
            selectStar() +
            "where {{pkSqlCondition}} ";

        return optionalSingle(sql, {{pkArgumentList}});
    }
    {{/hasPrimaryKey}}
    
    {{#coreQueries}}
    public List<{{concreteRecordClassName}}> {{queryName}}({{methodParameterList}}) {
        String sql =
            selectStar() +
            "where {{sqlCondition}} ";

        return query(sql, {{argumentList}});
    }

    {{/coreQueries}}
    
}
