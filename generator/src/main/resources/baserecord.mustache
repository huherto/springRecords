package {{baseRecord.packageName}};

{{#baseRecordImports}}
{{toString}}
{{/baseRecordImports}}

public class {{baseRecord.className}} implements BaseRecord {
    {{#columns}}
    private {{javaTypeName}} {{javaFieldName}};
    {{/columns}}

    public {{baseRecord.className}}() {
    }

    public {{baseRecord.className}}({{baseRecord.className}} other) {
    {{#columns}}
        this.{{javaFieldName}} = other.{{javaFieldName}};
    {{/columns}}
    }

    public {{baseRecord.className}}(ResultSet rs, int rowNum) throws SQLException {
    {{#columns}}
        this.{{javaFieldName}} = rs.{{{resultSetGetter}}};
    {{/columns}}
    }

    {{#columns}}
    public {{javaTypeName}} {{getterName}}() {
        return {{javaFieldName}};
    }

    public void {{setterName}}({{javaTypeName}} {{javaFieldName}}) {
        this.{{javaFieldName}} = {{javaFieldName}};
    }

    {{/columns}}

    @Override
    public Map<String, Object> asMap() {
        Map<String, Object> map = new HashMap<>();
        {{#columns}}
        map.put("{{columnName}}", this.{{javaFieldName}});
        {{/columns}}
        return map;
    }
}
